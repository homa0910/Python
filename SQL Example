CREATE TABLE trips (id INTEGER PRIMARY KEY,
                    client_id INTEGER,
                    city_name TEXT,
                    predicted_eta INTEGER,
                    actual_eta INTEGER,
                    status TEXT,
                    request_at TIMESTAMP);
                    
INSERT INTO trips (id, client_id, city_name, predicted_eta, actual_eta, status, request_at) VALUES 
  (1,1, 'Qarth', 16, 15, 'completed', '2016-06-11 13:23:44'),
  (2,2, 'Qarth', 18, 19, 'completed', '2016-07-11 10:13:14'),
  (3,3, 'Qarth', 18, 20, 'completed', '2016-06-19 12:13:14'),
  (4,4, 'Qarth', 28, 25, 'completed', '2016-07-05 20:13:14'),
  (5,5, 'Qarth', 26, 23, 'cancelled_by_rider', '2016-06-18 19:21:24'),
  (6,6, 'Qarth', 26, 33, 'cancelled_by_driver', '2016-06-28 19:21:24'),
  (7,7, 'Meereen', 11, 23, 'completed', '2016-06-28 13:11:14'),
  (8,8, 'Meereen', 26, 23, 'completed', '2016-06-18 9:24:29'),
  (9,9, 'Meereen', 21, 23, 'completed', '2016-06-08 23:11:14'),
  (10,10, 'Meereen', 26, 29, 'completed', '2016-06-21 19:24:29'),
  (11,11, 'Meereen', 39, 43, 'cancelled_by_rider', '2016-06-11 10:01:34'),
  (12,12, 'Seattle', 29, 43, 'completed', '2016-07-11 20:26:04');


CREATE TABLE cities (city_id INTEGER,
                     city_name TEXT);
                     
INSERT INTO cities(city_id, city_name) VALUES
   (1, 'Qarth'),
   (2, 'Meereen');

CREATE TABLE events (rider_id INTEGER,
                     city_id INTEGER,
                     event_name TEXT,
                     _ts TIMESTAMP);
                     
INSERT INTO events(rider_id, city_id, event_name, _ts) VALUES
  (3, 1, 'sign_up_success','2016-06-11 13:23:44'),
  (4, 1, 'sign_up_success','2016-07-01 13:23:44'),
  (13, 1, 'sign_up_success','2016-06-11 13:23:44'),
  (23, 1, 'sign_up_success','2016-06-11 13:23:44'),
  (23, 1, 'sign_up_success','2016-06-11 13:23:44'),
  (53, 1, 'sign_up_success','2016-06-11 13:23:44'),
  (123, 1, 'sign_up_success','2016-06-11 13:23:44'),
  (8, 2, 'sign_up_success','2016-06-11 13:23:44'),
  (9, 2, 'sign_up_success','2016-06-07 13:23:44'),
  (10, 2, 'sign_up_success','2016-06-19 13:23:44'),
  (23, 2, 'sign_up_success','2016-06-11 13:23:44'),
  (23, 2, 'sign_up_success','2016-06-11 13:23:44'),
  (53, 2, 'sign_up_success','2016-06-11 13:23:44'),
  (123, 2, 'sign_up_success','2016-06-11 13:23:44');
  
                     
### Find 90th percentile
SELECT difference_eta 
FROM (
  SELECT *, actual_eta - predicted_eta AS difference_eta, 
         percent_rank() over (order by actual_eta - predicted_eta) as percentile
  FROM trips 
  WHERE city_name = 'Qarth' AND status = 'completed' 
        AND extract(epoch FROM NOW()) - extract(epoch FROM request_at) < extract(epoch FROM INTERVAL '30 days')
  ORDER BY percentile ASC)
AS FOO
WHERE percentile > 0.8999999999 
ORDER BY percentile ASC
LIMIT 1;

### Find proportions of signups completed first trip over all signup within the first week of 2016
SELECT COUNT(all_signup) AS count_signup
  FROM ( 
    SELECT cities.city_name, events.rider_id, events.event_name, events._ts 
     FROM cities
     JOIN events
     ON events.city_id = cities.city_id
   ) AS all_signup
  WHERE city_name = 'Qarth' AND event_name = 'sign_up_success'
    AND EXTRACT(EPOCH FROM TIMESTAMP '2016-01-01 00:00:00') < EXTRACT(EPOCH FROM _ts)
    AND EXTRACT(EPOCH FROM _ts) < EXTRACT(EPOCH FROM TIMESTAMP '2016-01-02 00:00:00');

SELECT COUNT(signup_with_completed_trip) AS count_signup_with_completed_trip
  FROM (
    SELECT trips.request_at, trips.status ,cities.city_name, events.rider_id, events.event_name, events._ts
      FROM trips
      JOIN cities
      ON trips.city_name = cities.city_name
      JOIN events
      ON trips.client_id = events.rider_id
   ) AS signup_with_completed_trip
   WHERE city_name = 'Qarth' AND event_name = 'sign_up_success' AND status = 'completed'
     AND EXTRACT(EPOCH FROM TIMESTAMP '2016-01-01 00:00:00') < EXTRACT(EPOCH FROM _ts)
     AND EXTRACT(EPOCH FROM _ts) < EXTRACT(EPOCH FROM TIMESTAMP '2016-01-08 00:00:00')
     AND EXTRACT(EPOCH FROM request_at) < EXTRACT(EPOCH FROM _ts) + EXTRACT(EPOCH FROM INTERVAL '168 hours');








CREATE TABLE testdata
(
  intcolumn bigint,
  fltcolumn real
);

insert into testdata(intcolumn, fltcolumn)  values  (5, 5.1345);
insert into testdata(intcolumn, fltcolumn)  values  (195, 195.1345);
insert into testdata(intcolumn, fltcolumn)  values  (1095, 1095.1345);
insert into testdata(intcolumn, fltcolumn)  values  (5995, 5995.1345);
insert into testdata(intcolumn, fltcolumn)  values  (15, 15.1345);
insert into testdata(intcolumn, fltcolumn)  values  (25, 25.1345);
insert into testdata(intcolumn, fltcolumn)  values  (495, 495.1345);
insert into testdata(intcolumn, fltcolumn)  values  (35, 35.1345);
insert into testdata(intcolumn, fltcolumn)  values  (695, 695.1345);
insert into testdata(intcolumn, fltcolumn)  values  (595, 595.1345);
insert into testdata(intcolumn, fltcolumn)  values  (35, 35.1345);
insert into testdata(intcolumn, fltcolumn)  values  (30195, 30195.1345);
insert into testdata(intcolumn, fltcolumn)  values  (165, 165.1345);
insert into testdata(intcolumn, fltcolumn)  values  (65, 65.1345);
insert into testdata(intcolumn, fltcolumn)  values  (955, 955.1345);
insert into testdata(intcolumn, fltcolumn)  values  (135, 135.1345);
insert into testdata(intcolumn, fltcolumn)  values  (19195, 19195.1345);
insert into testdata(intcolumn, fltcolumn)  values  (145, 145.1345);
insert into testdata(intcolumn, fltcolumn)  values  (85, 85.1345);
insert into testdata(intcolumn, fltcolumn)  values  (455, 455.1345);

select fltcolumn, ntile(10) over (order by fltcolumn) AS percentile from testdata order by fltcolumn;

